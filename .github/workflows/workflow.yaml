# .github/workflows/build.yml
name: Build, Test, and Publish

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  release:
    types: [published]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Specify the Python version you need

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel

    - name: Clean previous builds
      run: |
        if exist build rmdir /s /q build
        if exist dist rmdir /s /q dist
        if exist mouse_anywhere.egg-info rmdir /s /q mouse_anywhere.egg-info
      shell: cmd

    - name: Setup MSVC environment and compile C code
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath > vcpath.txt
        set /p vcpath=<vcpath.txt
        call "%vcpath%\VC\Auxiliary\Build\vcvarsall.bat" x64
        cl /LD mouse-anywhere.c /Fe:mouse-anywhere.dll user32.lib

    - name: Verify DLL creation
      shell: cmd
      run: |
        if not exist mouse-anywhere.dll (
          echo "DLL was not created."
          exit 1
        )

    - name: Copy DLL to Python package
      run: |
        mkdir mouse_anywhere
        copy mouse-anywhere.dll mouse_anywhere\
      shell: cmd

    - name: Build Python package
      run: |
        python setup.py sdist bdist_wheel

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/*

    - name: Run tests
      run: |
        # List build artifacts for debugging
        dir dist\
  
        # Install the built package
        pip install dist\*.whl || exit 1

        # Install testing dependencies
        pip install pytest

        # Run tests
        pytest tests/
      shell: cmd

  publish:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Setup MSVC environment and compile C code
      shell: cmd
      run: |
        "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath > vcpath.txt
        set /p vcpath=<vcpath.txt
        call "%vcpath%\VC\Auxiliary\Build\vcvarsall.bat" x64
        cl /LD mouse-anywhere.c /Fe:mouse-anywhere.dll user32.lib

    - name: Verify DLL creation
      shell: cmd
      run: |
        if not exist mouse-anywhere.dll (
          echo "DLL was not created."
          exit 1
        )

    - name: Copy DLL to Python package
      run: |
        mkdir mouse_anywhere
        copy mouse-anywhere.dll mouse_anywhere\
      shell: cmd

    - name: Build Python package
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
